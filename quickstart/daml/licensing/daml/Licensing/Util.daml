-- Copyright (c) 2025, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: 0BSD

-- | Shared utilities for the Licensing contracts.
module Licensing.Util where

import Splice.Api.Token.MetadataV1
import qualified DA.Map as Map
import DA.Text as T
import DA.Action (unless)

-- | Easy way to enforce metadata limits within choices.
--
-- We consciously do not enforce the limits in 'ensure' clauses as that makes them harder to
-- change on an upgrade, as lowering the limits may make existing data unreadable.
enforceMetadataLimits : Metadata -> Update ()
enforceMetadataLimits (Metadata m) = do
  let numEntries = Map.size m
  unless (numEntries <= 128) $ fail $ "Metadata has too many entries " <> show numEntries <> ": max 128"
  let totalSize = sum [T.length k + T.length v | (k, v) <- Map.toList m]
  unless (totalSize <= 8192) $ fail $ "Metadata is too large " <> show totalSize <> ": max 8192 chars"