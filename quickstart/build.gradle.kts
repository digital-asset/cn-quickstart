// Copyright (c) 2025, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: 0BSD

plugins {
    id("com.github.jk1.dependency-license-report") version "2.9"
    id("de.undercouch.download") version "5.6.0"
}

licenseReport {
    outputDir = layout.buildDirectory.dir("reports/license").get().asFile.absolutePath
    renderers = arrayOf(
        com.github.jk1.license.render.InventoryReportRenderer("NOTICES")
    )
}

// Task to move the NOTICES file only into the root directory avoiding the intermediate jars report generated by the plugin
tasks.register<Copy>("generateNotices") {
    dependsOn("generateLicenseReport")
    from(layout.buildDirectory.dir("reports/license/NOTICES").get().asFile.absolutePath)
    into(rootDir.absolutePath)
}

repositories {
}

tasks.register<ConfigureProfilesTask>("configureProfiles") {
    group = "Custom"
    description = "Interactively configure development profiles."
}

// Task to download published Grafana dashboards for the observability stack
tasks.register<de.undercouch.gradle.tasks.download.Download>("fetchGrafanaDashboards") {
    val repositoryUrl = "https://digitalasset.jfrog.io/artifactory"
    val dashboardsDir = "$rootDir/config/o11y/grafana/dashboards/Participant"

    // TODO refactor to use `eachFile { f -> ... }` when we need to download multiple files
    src("$repositoryUrl/scribe/v${VersionFiles.dotenv["SCRIBE_VERSION"]}/grafana/v11.0.0/dashboard.json")
    dest(file("$dashboardsDir/pqs.json"))
    overwrite(true)
    onlyIfModified(true)

    doFirst {
        println("Downloading Grafana dashboards...")
        file(dashboardsDir).mkdirs()
        val (username, password) = Credentials.execFromNetRc("digitalasset.jfrog.io")
        username(username)
        password(password)
    }

    doLast {
        println("Grafana dashboards downloaded to $dashboardsDir")
    }
}
