# Copyright (c) 2024, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

---
networks:
  quickstart:
    name: ${DOCKER_NETWORK}

services:
  otel-collector:
    image: ${OTEL_COLLECTOR_IMAGE}:${OTEL_COLLECTOR_VERSION}
    container_name: otel-collector
    hostname: otel-collector
    ports:
      - "${OTEL_COLLECTOR_FLUENTD_PORT}:${OTEL_COLLECTOR_FLUENTD_PORT}"
    command:
      - --config=/etc/otel-collector/config.yaml
      - --feature-gates=receiver.prometheusreceiver.EnableNativeHistograms
    environment:
      OTLP_LISTEN_PORT: ${OTEL_COLLECTOR_OTLP_PORT}
      FLUENTD_LISTEN_PORT: ${OTEL_COLLECTOR_FLUENTD_PORT}
      CANTON_METRICS_PORT: ${CANTON_METRICS_PORT}
      CADVISOR_METRICS_PORT: ${CADVISOR_METRICS_PORT}
      POSTGRES_EXPORTER_METRICS_PORT: ${POSTGRES_EXPORTER_METRICS_PORT}
      NGINX_EXPORTER_METRICS_PORT: ${NGINX_EXPORTER_METRICS_PORT}
      PROMETHEUS_PORT: ${PROMETHEUS_HTTP_PORT}
      LOKI_PORT: ${LOKI_HTTP_PORT}
      TEMPO_PORT: ${TEMPO_OTLP_PORT}
    volumes:
      - ./config/o11y/otel-collector/collector.yaml:/etc/otel-collector/config.yaml
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  prometheus:
    image: ${PROMETHEUS_IMAGE}:${PROMETHEUS_VERSION}
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/config.yaml
      - --web.enable-admin-api
      - --web.enable-remote-write-receiver
      - --web.listen-address=:${PROMETHEUS_HTTP_PORT}
      - --enable-feature=native-histograms
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
      - --storage.tsdb.path=/prometheus/data
    volumes:
      - ./config/o11y/prometheus/prometheus.yaml:/etc/prometheus/config.yaml
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  loki:
    image: ${LOKI_IMAGE}:${LOKI_VERSION}
    container_name: loki
    hostname: loki
    command:
      - --config.file=/etc/loki/config.yaml
      - --config.expand-env=true
    environment:
      HTTP_LISTEN_PORT: ${LOKI_HTTP_PORT}
    volumes:
      - ./config/o11y/loki/loki.yaml:/etc/loki/config.yaml
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  tempo:
    image: ${TEMPO_IMAGE}:${TEMPO_VERSION}
    container_name: tempo
    hostname: tempo
    command:
      - --config.file=/etc/tempo/config.yaml
      - --config.expand-env=true
    environment:
      HTTP_LISTEN_PORT: ${TEMPO_HTTP_PORT}
      OTLP_LISTEN_PORT: ${TEMPO_OTLP_PORT}
      PROMETHEUS_PORT: ${PROMETHEUS_HTTP_PORT}
    volumes:
      - ./config/o11y/tempo/tempo.yaml:/etc/tempo/config.yaml
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  grafana:
    image: ${GRAFANA_IMAGE}:${GRAFANA_VERSION}
    container_name: grafana
    hostname: grafana
    environment:
      LOKI_PORT: ${LOKI_HTTP_PORT}
      PROMETHEUS_PORT: ${PROMETHEUS_HTTP_PORT}
      TEMPO_PORT: ${TEMPO_HTTP_PORT}
    ports:
      - "3030:3000"
    volumes:
      - ./config/o11y/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/o11y/grafana/provisioning:/etc/grafana/provisioning
      - ./config/o11y/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - ${DOCKER_NETWORK}
    depends_on:
      prometheus:
        condition: service_started
    profiles:
      - observability

  cadvisor:
    image: ${CADVISOR_IMAGE}:${CADVISOR_VERSION}
    container_name: cadvisor
    hostname: cadvisor
    command:
      - --store_container_labels=false
      - -docker_only
      - -port=${CADVISOR_METRICS_PORT}
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  nginx-app-user-metrics:
    image: ${NGINX_EXPORTER_IMAGE}:${NGINX_EXPORTER_VERSION}
    container_name: nginx-app-user-metrics
    hostname: nginx-app-user-metrics
    command:
      - --nginx.scrape-uri=http://nginx-app-user/status
      - --web.listen-address=:${NGINX_EXPORTER_METRICS_PORT}
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  nginx-app-provider-metrics:
    image: ${NGINX_EXPORTER_IMAGE}:${NGINX_EXPORTER_VERSION}
    container_name: nginx-app-provider-metrics
    hostname: nginx-app-provider-metrics
    command:
      - --nginx.scrape-uri=http://nginx-app-provider/status
      - --web.listen-address=:${NGINX_EXPORTER_METRICS_PORT}
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  nginx-sv-metrics:
    image: ${NGINX_EXPORTER_IMAGE}:${NGINX_EXPORTER_VERSION}
    container_name: nginx-sv-metrics
    hostname: nginx-sv-metrics
    command:
      - --nginx.scrape-uri=http://nginx-sv/status
      - --web.listen-address=:${NGINX_EXPORTER_METRICS_PORT}
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  postgres-splice-app-user-metrics:
    image: ${POSTGRES_EXPORTER_IMAGE}:${POSTGRES_EXPORTER_VERSION}
    container_name: postgres-splice-app-user-metrics
    hostname: postgres-splice-app-user-metrics
    command:
      - --web.listen-address=:${POSTGRES_EXPORTER_METRICS_PORT}
    environment:
      DATA_SOURCE_URI: "${SPLICE_APP_USER_DB_SERVER}:${SPLICE_APP_USER_DB_PORT}/postgres?sslmode=disable"
      DATA_SOURCE_USER: "${SPLICE_APP_USER_DB_USER}"
      DATA_SOURCE_PASS: "${SPLICE_APP_USER_DB_PASSWORD}"
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  postgres-splice-app-provider-metrics:
    image: ${POSTGRES_EXPORTER_IMAGE}:${POSTGRES_EXPORTER_VERSION}
    container_name: postgres-splice-app-provider-metrics
    hostname: postgres-splice-app-provider-metrics
    command:
      - --web.listen-address=:${POSTGRES_EXPORTER_METRICS_PORT}
    environment:
      DATA_SOURCE_URI: "${SPLICE_APP_PROVIDER_DB_SERVER}:${SPLICE_APP_PROVIDER_DB_PORT}/postgres?sslmode=disable"
      DATA_SOURCE_USER: "${SPLICE_APP_PROVIDER_DB_USER}"
      DATA_SOURCE_PASS: "${SPLICE_APP_PROVIDER_DB_PASSWORD}"
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability

  postgres-splice-sv-metrics:
    image: ${POSTGRES_EXPORTER_IMAGE}:${POSTGRES_EXPORTER_VERSION}
    container_name: postgres-splice-sv-metrics
    hostname: postgres-splice-sv-metrics
    command:
      - --web.listen-address=:${POSTGRES_EXPORTER_METRICS_PORT}
    environment:
      DATA_SOURCE_URI: "${SPLICE_SV_DB_SERVER}:${SPLICE_SV_DB_PORT}/postgres?sslmode=disable"
      DATA_SOURCE_USER: "${SPLICE_SV_DB_USER}"
      DATA_SOURCE_PASS: "${SPLICE_SV_DB_PASSWORD}"
    networks:
      - ${DOCKER_NETWORK}
    profiles:
      - observability
