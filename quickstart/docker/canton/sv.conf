canton.participants.sv = ${_participant} {
  storage.config.properties.databaseName = participant-sv
  monitoring {
    http-health-server.port = 4${CANTON_HTTP_HEALTHCHECK_PORT}
    grpc-health-server.port= 4${CANTON_GRPC_HEALTHCHECK_PORT}
  }
  http-ledger-api {
    server.port = 4${PARTICIPANT_JSON_API_PORT}
    allow-insecure-tokens=true
  }
  admin-api.port = 4${PARTICIPANT_ADMIN_API_PORT}
  ledger-api {
    port = 4${PARTICIPANT_LEDGER_API_PORT}
    user-management-service.additional-admin-user-id=administrator
    auth-services = []
  }
}

# We run sequencer and mediator in one docker container
# because bootstrapping the domain initially gets
# even more complicated otherwise.
canton.sequencers {
  sequencer {
    init.auto-init=false

    storage = ${_storage} {
      config.properties {
        databaseName = "sequencer"
        currentSchema = "sequencer"
      }
    }

    public-api {
      address = "0.0.0.0"
      port = 5008
    }

    admin-api {
      address = "0.0.0.0"
      port = 5009
    }

    monitoring.grpc-health-server {
      address = "0.0.0.0"
      port = 5062
    }

    sequencer {
      config {
        storage = ${_storage} {
          config.properties {
            databaseName = "sequencer"
            currentSchema = "sequencer_driver"
          }
        }
      }
      type = reference
    }
  }
}

canton.mediators {
  mediator {
    init.auto-init=false

    storage = ${_storage} {
      config.properties {
        databaseName = "mediator"
        currentSchema = "mediator"
      }
    }

    admin-api {
      address = "0.0.0.0"
      port = 5007
    }

    monitoring.grpc-health-server {
      address = "0.0.0.0"
      port = 5061
    }
  }
}