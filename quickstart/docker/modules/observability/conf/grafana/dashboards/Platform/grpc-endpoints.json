{
   "graphTooltip": 1,
   "panels": [
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "showPoints": "never"
               },
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 0
         },
         "id": 1,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "histogram_quantile($quantile, sum by(grpc_service_name, grpc_client_type, grpc_method_name, grpc_server_type, grpc_code) (rate(daml_grpc_server_duration_seconds{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval])))",
               "legendFormat": "{{grpc_method_name}} - {{grpc_code}} ({{grpc_client_type}} - {{grpc_server_type}})"
            }
         ],
         "title": "Latency Quantile",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "showPoints": "never"
               },
               "unit": "reqps"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
         },
         "id": 2,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) (rate(daml_grpc_server_started_total{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval]))",
               "legendFormat": "{{grpc_method_name}} ({{grpc_client_type}} - {{grpc_server_type}})"
            }
         ],
         "title": "Requests Started",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "showPoints": "never"
               },
               "unit": "reqps"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
         },
         "id": 3,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name, grpc_code) (rate(daml_grpc_server_handled_total{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval]))",
               "legendFormat": "{{grpc_method_name}} - {{grpc_code}} - ({{grpc_client_type}} - {{grpc_server_type}})"
            }
         ],
         "title": "Requests Finished",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "showPoints": "never"
               },
               "unit": "reqps"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
         },
         "id": 4,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name, grpc_code) (rate(daml_grpc_server_handled_total{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\", grpc_code!=\"OK\"}[$__rate_interval]))",
               "legendFormat": "{{grpc_method_name}} - {{grpc_code}}"
            }
         ],
         "title": "Errors",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "drawStyle": "bars",
                  "fillOpacity": 100,
                  "showPoints": "never",
                  "stacking": {
                     "mode": "normal"
                  }
               },
               "unit": "percentunit"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
         },
         "id": 5,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "sum by(service, grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name, grpc_code) (rate(daml_grpc_server_handled_total{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\", grpc_code!=\"OK\"}[1m])) / on(service, grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) group_left() sum by(service, grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) (rate(daml_grpc_server_handled_total{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[1m]))",
               "legendFormat": "{{grpc_method_name}} - {{grpc_code}}"
            }
         ],
         "title": "Error Distribution",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "scaleDistribution": {
                     "log": 2,
                     "type": "log"
                  },
                  "showPoints": "never"
               },
               "unit": "decbytes"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 24
         },
         "id": 6,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "histogram_sum(sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) (rate(daml_grpc_server_messages_received_bytes{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval]))) / histogram_count(sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) (rate(daml_grpc_server_messages_received_bytes{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval])))",
               "legendFormat": "{{grpc_method_name}} - ({{grpc_client_type}} - {{grpc_server_type}})"
            }
         ],
         "title": "Average Request Payload Size",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "axisSoftMin": 0,
                  "scaleDistribution": {
                     "log": 2,
                     "type": "log"
                  },
                  "showPoints": "never"
               },
               "unit": "Bps"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 24
         },
         "id": 7,
         "interval": "10s",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.0.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "${datasource}"
               },
               "expr": "histogram_sum(sum by(grpc_server_type, grpc_service_name, grpc_client_type, grpc_method_name) (rate(daml_grpc_server_messages_received_bytes{namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", service=\"$component\", grpc_service_name=~\"$service\", grpc_method_name=~\"$method\"}[$__rate_interval])))",
               "legendFormat": "{{grpc_method_name}} - ({{grpc_client_type}} - {{grpc_server_type}})"
            }
         ],
         "title": "Request Payload Throughput",
         "type": "timeseries"
      }
   ],
   "refresh": "10s",
   "schemaVersion": 39,
   "tags": [
      "grpc",
      "network",
      "bandwidth"
   ],
   "templating": {
      "list": [
         {
            "hide": 2,
            "name": "datasource",
            "query": "prometheus",
            "type": "datasource"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "name": "namespace",
            "query": "label_values(daml_grpc_server_started_total, namespace)",
            "refresh": 2,
            "type": "query"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "includeAll": true,
            "multi": true,
            "name": "pod",
            "query": "label_values(daml_grpc_server_started_total{namespace=\"$namespace\"}, pod)",
            "refresh": 2,
            "type": "query"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "includeAll": true,
            "multi": true,
            "name": "container",
            "query": "label_values(daml_grpc_server_started_total{namespace=\"$namespace\", pod=~\"$pod\"}, container)",
            "refresh": 2,
            "type": "query"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "name": "component",
            "query": "label_values(daml_grpc_server_started_total{namespace=\"$namespace\"}, service)",
            "refresh": 2,
            "type": "query"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "name": "service",
            "query": "label_values(daml_grpc_server_started_total{namespace=\"$namespace\", service=\"$component\"}, grpc_service_name)",
            "refresh": 2,
            "type": "query"
         },
         {
            "datasource": {
               "type": "prometheus",
               "uid": "${datasource}"
            },
            "includeAll": true,
            "name": "method",
            "query": "label_values(daml_grpc_server_started_total{namespace=\"$namespace\", service=\"$component\", grpc_service_name=\"$service\"}, grpc_method_name)",
            "refresh": 2,
            "type": "query"
         },
         {
            "current": {
               "selected": false,
               "text": "0.5",
               "value": "0.5"
            },
            "name": "quantile",
            "options": [
               {
                  "selected": true,
                  "text": "0.5",
                  "value": "0.5"
               },
               {
                  "selected": false,
                  "text": "0.9",
                  "value": "0.9"
               },
               {
                  "selected": false,
                  "text": "0.95",
                  "value": "0.95"
               },
               {
                  "selected": false,
                  "text": "0.99",
                  "value": "0.99"
               }
            ],
            "query": "0.5 : 0.5,0.9 : 0.9,0.95 : 0.95,0.99 : 0.99",
            "type": "custom"
         }
      ]
   },
   "time": {
      "from": "now-15m",
      "to": "now"
   },
   "timepicker": {
      "refresh_intervals": [
         "5s",
         "10s",
         "30s",
         "1m",
         "5m",
         "15m",
         "30m",
         "1h",
         "2h",
         "1d"
      ]
   },
   "timezone": "browser",
   "title": "gRPC Endpoints",
   "uid": "digital-asset-grpc-endpoints"
}
